---
http_interactions:
- request:
    method: post
    uri: http://localhost:3030/api/session
    body:
      encoding: UTF-8
      string: '{"username":"mb@example.com","password":"p@ssw0rd"}'
    headers:
      User-Agent:
      - MetabaseRuby/0.6.0 (ruby3.2.0)
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - DENY
      X-Xss-Protection:
      - 1; mode=block
      Last-Modified:
      - Sun, 14 May 2023 17:08:35 GMT
      Strict-Transport-Security:
      - max-age=31536000
      Set-Cookie:
      - metabase.DEVICE=42b03dc3-1d6a-456f-b94e-5dc81c9297e9;HttpOnly;Path=/;Expires=Thu,
        14 May 2043 17:08:35 GMT;SameSite=Lax
      - metabase.SESSION=8234c958-7229-4230-8f5b-921869bc8094;SameSite=Lax;Path=/;HttpOnly
      - metabase.TIMEOUT=alive;SameSite=Lax;Path=/;Max-Age=1209600
      X-Permitted-Cross-Domain-Policies:
      - none
      Cache-Control:
      - max-age=0, no-cache, must-revalidate, proxy-revalidate
      X-Content-Type-Options:
      - nosniff
      Content-Security-Policy:
      - default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com
        https://accounts.google.com    'sha256-K2AkR/jTLsGV8PyzWha7/ey1iaD9c5jWRYwa++ZlMZc='
        'sha256-ib2/2v5zC6gGM6Ety7iYgBUvpy/caRX9xV/pzzV7hf0=' 'sha256-isH538cVBUY8IMlGYGbWtBwr+cGqkc4mN6nLcA7lUjE=';
        child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'
        https://accounts.google.com; font-src *; img-src * 'self' data:; connect-src
        'self' https://accounts.google.com metabase.us10.list-manage.com   ; manifest-src
        'self';  frame-ancestors 'none';
      Content-Type:
      - application/json;charset=utf-8
      Expires:
      - Tue, 03 Jul 2001 06:00:00 GMT
      Transfer-Encoding:
      - chunked
      Server:
      - Jetty(11.0.14)
    body:
      encoding: ASCII-8BIT
      string: '{"id":"8234c958-7229-4230-8f5b-921869bc8094"}'
  recorded_at: Sun, 14 May 2023 17:08:35 GMT
- request:
    method: get
    uri: http://localhost:3030/api/table
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - MetabaseRuby/0.6.0 (ruby3.2.0)
      X-Metabase-Session:
      - 8234c958-7229-4230-8f5b-921869bc8094
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      X-Frame-Options:
      - DENY
      X-Xss-Protection:
      - 1; mode=block
      Last-Modified:
      - Sun, 14 May 2023 17:08:35 GMT
      Strict-Transport-Security:
      - max-age=31536000
      Set-Cookie:
      - metabase.DEVICE=31c227a1-bd84-443c-a22a-2d481e11f60a;HttpOnly;Path=/;Expires=Thu,
        14 May 2043 17:08:35 GMT;SameSite=Lax
      X-Permitted-Cross-Domain-Policies:
      - none
      Cache-Control:
      - max-age=0, no-cache, must-revalidate, proxy-revalidate
      X-Content-Type-Options:
      - nosniff
      Content-Security-Policy:
      - default-src 'none'; script-src 'self' 'unsafe-eval' https://maps.google.com
        https://accounts.google.com    'sha256-K2AkR/jTLsGV8PyzWha7/ey1iaD9c5jWRYwa++ZlMZc='
        'sha256-ib2/2v5zC6gGM6Ety7iYgBUvpy/caRX9xV/pzzV7hf0=' 'sha256-isH538cVBUY8IMlGYGbWtBwr+cGqkc4mN6nLcA7lUjE=';
        child-src 'self' https://accounts.google.com; style-src 'self' 'unsafe-inline'
        https://accounts.google.com; font-src *; img-src * 'self' data:; connect-src
        'self' https://accounts.google.com metabase.us10.list-manage.com   ; manifest-src
        'self';  frame-ancestors 'none';
      Content-Type:
      - application/json;charset=utf-8
      Expires:
      - Tue, 03 Jul 2001 06:00:00 GMT
      Transfer-Encoding:
      - chunked
      Server:
      - Jetty(11.0.14)
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Sun, 14 May 2023 17:08:36 GMT
recorded_with: VCR 6.0.0
